/* Reset */
/* normalize.css v3.0.2 | MIT License | git.io/normalize */
html {
  font-family: sans-serif; /* 1 */
  -ms-text-size-adjust: 100%; /* 2 */
  -webkit-text-size-adjust: 100%; /* 2 */
}
body {
  margin: 0;
}
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
menu,
nav,
section,
summary {
  display: block;
}
audio,
canvas,
progress,
video {
  display: inline-block; /* 1 */
  vertical-align: baseline; /* 2 */
}
audio:not([controls]) {
  display: none;
  height: 0;
}
[hidden],
template {
  display: none;
}
a {
  background-color: transparent;
}
a:active,
a:hover {
  outline: 0;
}
abbr[title] {
  border-bottom: 1px dotted;
}
b,
strong {
  font-weight: bold;
}
dfn {
  font-style: italic;
}
h1 {
  font-size: 2em;
  margin: 0.67em 0;
}
mark {
  background: #ff0;
  color: #000;
}
small {
  font-size: 80%;
}
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}
sup {
  top: -0.5em;
}
sub {
  bottom: -0.25em;
}
img {
  border: 0;
}
svg:not(:root) {
  overflow: hidden;
}
figure {
  margin: 1em 40px;
}
hr {
  -moz-box-sizing: content-box;
  box-sizing: content-box;
  height: 0;
}
pre {
  overflow: auto;
}
code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  font-size: 1em;
}
button,
input,
optgroup,
select,
textarea {
  color: inherit; /* 1 */
  font: inherit; /* 2 */
  margin: 0; /* 3 */
}
button {
  overflow: visible;
}
button,
select {
  text-transform: none;
}
button,
html input[type="button"],
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button; /* 2 */
  cursor: pointer; /* 3 */
}
button[disabled],
html input[disabled] {
  cursor: default;
}
button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0;
}
input {
  line-height: normal;
}
input[type="checkbox"],
input[type="radio"] {
  box-sizing: border-box; /* 1 */
  padding: 0; /* 2 */
}
input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
  height: auto;
}
input[type="search"] {
  -webkit-appearance: textfield; /* 1 */
  -moz-box-sizing: content-box;
  -webkit-box-sizing: content-box; /* 2 */
  box-sizing: content-box;
}
input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em;
}
legend {
  border: 0; /* 1 */
  padding: 0; /* 2 */
}
textarea {
  overflow: auto;
}
optgroup {
  font-weight: bold;
}
table {
  border-collapse: collapse;
  border-spacing: 0;
}
td,
th {
  padding: 0;
}
/* Variables */
/* Resets */
*,
*:before,
*:after {
  box-sizing: border-box;
}
ul,
figure {
  padding: 0;
  margin: 0;
}
.mdl-layout__content {
  position: relative;
}
.page-content {
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  display: flex;
  flex-direction: column;
  height: 100%;
}
.mdl-layout__header .mdl-icon-toggle.is-checked .mdl-icon-toggle__label {
  color: #fff;
  opacity: 0.9;
}
.mdl-layout__header .mdl-icon-toggle__label {
  color: #fff;
  opacity: 0.3;
}
.mdl-layout__header .mdl-icon-toggle__ripple-container .mdl-ripple {
  background: #e91e63;
}
.mdl-layout__drawer img {
  vertical-align: top;
  width: 18px;
  margin-right: 7px;
}
.map {
  display: block;
  flex-basis: 100%;
}
.infowindow__title {
  margin: 10px 0;
  font-size: 18px;
  line-height: 1.2;
  font-weight: bold;
}
.infowindow__description {
  max-width: 500px;
  margin: 10px 0;
}
.infowindow__description p {
  margin-bottom: 10px;
  line-height: 1.5;
  font-size: 13px;
  font-weight: 300;
  white-space: pre-wrap;
}
.infowindow__description ul {
  margin-left: 20px;
}
.infowindow__name {
  font-size: 16px;
  font-weight: 500;
}
.infowindow__address,
.infowindow__time {
  font-size: 12px;
}
.time {
  position: absolute;
  top: 60px;
  right: 0;
  margin: 5px;
  background: #fff;
}
.time select,
.time input {
  height: 30px;
  border: none;
  background: #fff;
  border: 1px solid rgba(0,0,0,0.25);
  box-shadow: 0px 1px 4px -1px rgba(0,0,0,0.3);
}
.time select,
.time option {
  text-transform: capitalize;
}
.time input {
  width: 70px;
  margin-left: -1px;
}
.radius {
  display: flex;
  align-items: center;
  padding: 2px 0;
  border-top: 1px solid rgba(0,0,0,0.12);
}
.radius .mdl-slider__container {
  width: calc(100% - 100px);
}
.radius .mdl-textfield {
  width: 100px;
  border-left: 1px solid rgba(0,0,0,0.12);
}
.radius .mdl-textfield__label,
.radius .mdl-textfield {
  padding-left: 15px;
  padding-right: 15px;
}
/*# sourceMappingURL=data:application/json;base64, */